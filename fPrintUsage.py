def fPrintUsage(asApplicationKeywords):
  print "Usage:";
  print "  BugId.py [options] \"path\\to\\binary.exe\" [arguments]";
  print "    Start the binary in the debugger with the provided arguments.";
  print "";
  print "  BugId.py [options] application [additional arguments]";
  print "    (Where \"application\" is a known application keyword, see below)";
  print "    Start the application identified by the keyword in the debugger";
  print "    using the application's default command-line and arguments followed";
  print "    by the additional arguments provided and apply application specific";
  print "    settings.";
  print "";
  print "  BugId.py [options] application=\"path\\to\\binary.exe\" [arguments]";
  print "    Start the application identified by the keyword in the debugger";
  print "    using the provided binary and arguments and apply application specific";
  print "    settings. (i.e. the application's default command-line is ignored in";
  print "    favor of the provided binary and arguments).";
  print "";
  print "  BugId.py [options] --pids=[comma separated list of process ids]";
  print "    Attach debugger to the process(es) provided in the list. The processes must";
  print "    all have been suspended, as they will be resumed by the debugger.";
  print "";
  print "Options are of the form --[name]=[JSON value]. Note that you may need to do a";
  print "bit of quote-juggling because Windows likes to eat quotes from the JSON value";
  print "for no obvious reason. So, if you want to specify --a=\"b\", you will need to";
  print "use \"--a=\\\"b\\\"\", or BugId will see --a=b (b is not valid JSON). *sigh*";
  print "  --forever";
  print "    Restart the application to run another test as soon as the application is";
  print "    terminated. Useful when testing the reliability of a repro, detecting the";
  print "    various crashes a non-deterministic repro can cause or while making ";
  print "    modifications to the repro in order to test how they affect the crash.";
  print "    A statistics file is created or updated after each run that contains the";
  print "    number of occurances of each Bug Id that was detected.";
  print "  --isa=x86|x64";
  print "    Use the x86 or x64 version of cdb to debug the application. The default is";
  print "    to use the ISA of the OS. Applications build to run on x86 systems can be";
  print "    debugged using the x64 version of cdb, but symbol resolution may fail and";
  print "    results may vary. You are strongly encouraged to use the same ISA for the";
  print "    debugger as the application. (ISA = Instruction Set Architecture)";
  print "  --bGenerateReportHTML=false";
  print "    Do not save a HTML formatted crash report. This should make BugId run";
  print "    faster, as it does not need to gather and process as much information as";
  print "    needed when creating the HTML report.";
  print "  --fast";
  print "    Fast: disable report and symbol servers. This is an alias for";
  print "        --bGenerateReportHTML=false";
  print "        --asSymbolServerURLs=[]";
  print "        --Bugid.bUse_NT_SYMBOL_PATH=false";
  print "    If you only need to confirm a crash can be reproduced, you may want to use";
  print "    this: it can make the process of analyzing a crash a lot faster. But if";
  print "    no local or cached symbols are available, you'll get less information";
  print "  \"--sReportFolderPath=\\\"BugId\\\"\"";
  print "    Save report to the specified folder, in this case \"BugId\". The quotes";
  print "    mess is needed because of the Windows quirck explained above.";
  print "You can also adjust cBugId specific settings, such as:";
  print "  --cBugId.bSaveDump=true";
  print "    Save a dump file when a crash is detected.";
  print "  --cBugId.bOutputStdIn=true, --cBugId.bOutputStdOut=true,";
  print "      --cBugId.bOutputStdErr=true";
  print "    Show verbose cdb input / output during debugging.";
  print "  --cBugId.asSymbolServerURLs=[\"http://msdl.microsoft.com/download/symbols\"]";
  print "    Use http://msdl.microsoft.com/download/symbols as a symbol server.";
  print "  --cBugId.asSymbolCachePaths=[\"C:\\Symbols\"]";
  print "    Use C:\\Symbols to cache symbol files.";
  print "  See dxConfig.py and srv\dxBugIdConfig.py for a list of settings that you can";
  print "  change. All values must be valid JSON of the appropriate type. No checks are";
  print "  made to ensure this. Providing illegal values may result in exceptions at any";
  print "  time during execution. You have been warned.";
  print "";
  print "Known application keywords:";
  for sApplicationKeyword in asApplicationKeywords:
    print "  %s" % sApplicationKeyword;
  print "Run BugId.py application? for an overview of the application specific command";
  print "line, arguments and settings.";
